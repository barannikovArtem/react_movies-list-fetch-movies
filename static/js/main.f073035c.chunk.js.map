{"version":3,"sources":["components/FindMovie/FindMovie.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.tsx","App.tsx","index.tsx"],"names":["Errors","MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","request","endpoint","a","fetch","response","json","FindMovie","addMovie","useState","query","setQuery","setMovie","none","error","setError","handleQuery","useCallback","event","target","value","findMovie","find","res","Response","notMatch","required","movieSubmit","preventDefault","empty","onSubmit","htmlFor","type","id","placeholder","onChange","onClick","App","setMovies","newMovie","every","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f073035c.chunk.js","sourcesContent":["import React, { FormEvent, useCallback, useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\ninterface Props {\n  addMovie: (item: Movie) => void;\n}\n\nenum Errors {\n  none = '',\n  required = 'Enter the title',\n  notMatch = 'Can\\'t find a movie with this title',\n  empty = 'You need to find a movie',\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(Errors.none);\n\n  const handleQuery = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n      setError(Errors.none);\n    }, [],\n  );\n\n  const findMovie = useCallback(() => {\n    if (!query) {\n      setError(Errors.required);\n    } else {\n      const find = async () => {\n        const res = await request(query);\n\n        if (res.Response === 'False') {\n          setError(Errors.notMatch);\n        } else {\n          setMovie(res);\n          setError(Errors.none);\n        }\n      };\n\n      find();\n    }\n  }, [query]);\n\n  const movieSubmit = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!movie) {\n      setError(Errors.empty);\n    }\n\n    if (!error && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  }, [movie, error]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={movieSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const key = '3d12c401';\nconst API_URL = `https://www.omdbapi.com/?apikey=${key}`;\n\nexport const request = async (endpoint: string) => {\n  const response = await fetch(`${API_URL}&t=${endpoint}`);\n\n  return response.json();\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbID !== newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    } else {\n      // eslint-disable-next-line\n      alert('Movie already exist')\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && (\n          <MoviesList movies={movies} />\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}